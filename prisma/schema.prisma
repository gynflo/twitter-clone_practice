// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//previewFeatures = ["referentialIntegrity"]

generator client {
  provider = "prisma-client-js"
}

//referentialIntegrity = "prisma"

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  
}


// Model User
 model User {
  id    String    @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name  String? @unique
  username String @unique
  password String
  profileImage String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshToken RefreshToken[]
  // Tweets
  tweets Tweet[]
  // Fichier
  mediaFiles MediaFile[]

 }

 // ModelRefreshToken
 model RefreshToken {
  id    String    @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
 }


 model Tweet {
  id    String    @id @default(auto()) @map("_id") @db.ObjectId
  text String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Auteur
  authorId String @db.ObjectId
  author User @relation(fields: [authorId], references: [id])

  // RÃ©ponses au tweet
  replyToId String? @db.ObjectId
  replies Tweet[] @relation("replies")
  replyTo Tweet? @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  // Fichier
  mediaFiles MediaFile[]

 }

// Model Fichiers
 model MediaFile {
  id    String    @id @default(auto()) @map("_id") @db.ObjectId
  url String
  providerPublicId String //id cloudinary afin de supprimer tous les media par leurs ids 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Utilisateur
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])

  //tweet
  tweetId String? @db.ObjectId
  tweet Tweet? @relation(fields: [tweetId], references: [id])

 }
